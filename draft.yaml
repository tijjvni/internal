models:
  Client:
    name: string:150
    user_id: foreign:users.id
    relationships:
      belongsTo: User
  ProjectStatus:
    name: string:50
  Project:
    title: string:150
    description: text nullable
    status: foreign:project_statuses.id
    relationships:
      belongsTo: Client
      hasMany: Issue
      morphMany: Payment    

  StaffRole:
    name: string:50
  Staff:
    priority: integer
    role_id: foreign:staff_roles.id
    user_id: foreign:users.id
    relationships:
      morphMany: Payment    
  Administrator:
    super_admin: boolean default:false
    user_id: foreign:users.id

  IssueStatus:
    name: string:50
  Issue:
    priority: integer
    summary: text
    status: foreign:issue_statuses.id
    relationships:
      hasMany: IssueActivity
  IssueActivity:
    description: text
    issue_id: foreign:issues.id  
    user_id: foreign:users.id

  TransactionType:
    name: string:150
  Transaction:
    amount: integer
    type: foreign:transaction_types.id
  Payment:
    is_completed: boolean default:false

    relationships:
      morphTo: paymentable

seeders: StaffRole, ProjectStatus, IssueStatus

controllers:
  Clients:
    index:
      query: all
      render: clients.index with:clients
    create:
      render: clients.create
    store:
      validate: name
      save: client
      send: ClientWelcome to:client.user.email with:client
      dispatch: WelcomeClient with:client
      fire: NewClient with:client
      flash: client.name
      redirect: clients.index
    show:
      find: client.id
      render: clients.show with:client

  Projects:
    index:
      query: all
      render: projects.index with:projects
    create:
      render: projects.create
    store:
      validate: title, user
      save: project
      redirect: projects.index
    show:
      find: project.id
      render: projects.show with:project

  Issues:
    index:
      query: all
      render: issues.index with:issues
    create:
      render: issues.create
    store:
      validate: priority, status
      save: issue
      redirect: issues.index
    show:
      find: issue.id
      render: issues.show with:issue


